{"version":3,"sources":["context/contextReducer.js","context/context.js","constants/categories.js","useTransactions.js","components/Details/styles.js","components/Details/Details.jsx","components/Main/styles.js","utils/formatDate.js","components/Main/Form/styles.js","components/Snackbar/styles.js","components/Snackbar/Snackbar.jsx","components/Main/Form/Form.jsx","components/Main/List/styles.js","components/Main/List/List.jsx","components/InfoCard.jsx","components/Main/Main.jsx","styles.js","App.js","index.js"],"names":["contextReducer","state","action","transactions","type","filter","t","id","payload","localStorage","setItem","JSON","stringify","initialState","parse","getItem","ExpenseTrackerContext","createContext","Provider","children","useReducer","dispatch","balance","reduce","acc","currVal","amount","value","deleteTransaction","addTransaction","transaction","incomeColors","expenseColors","incomeCategories","color","expenseCategories","useTransactions","title","forEach","c","transactionsPerType","useContext","total","categories","category","find","filteredCategories","chartData","datasets","data","map","backgroundColor","labels","makeStyles","income","borderBottom","expense","Details","classes","useStyles","Card","className","CardHeader","CardContent","Typography","variant","theme","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","cartContent","divider","margin","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","radioGroup","display","justifyContent","marginBottom","button","marginTop","root","width","spacing","CustomizedSnackbar","open","setOpen","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","elevation","Form","useState","formData","setFormData","segment","useSpeechContext","createTransaction","Number","uuidv4","useEffect","intent","isFinal","entities","e","charAt","slice","toLowerCase","iC","includes","selectedCategories","Grid","container","item","xs","align","gutterBottom","words","w","FormControl","fullWidth","InputLabel","Select","onChange","target","MenuItem","key","TextField","label","Button","onClick","avatarIncome","green","avatarExpense","palette","getContrastText","red","list","maxHeight","overflow","List","dense","Slide","direction","in","mountOnEnter","unmountOnExit","ListItem","ListItemAvatar","Avatar","MoneyOff","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","Delete","isIncome","Math","round","random","InfoCard","style","textAlign","padding","Main","subheader","lineHeight","Divider","desktop","breakpoints","up","mobile","down","main","paddingBottom","last","grid","App","speechState","useRef","SpeechState","Recording","current","scrollIntoView","alignItems","justify","sm","ref","ReactDOM","render","appId","language","document","getElementById"],"mappings":"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","file":"static/js/main.2f327c19.chunk.js","sourcesContent":["// Reducer() => a function that takes in the old state=> and an action => return new state \nconst contextReducer = (state, action) => {\n    let transactions;\n    switch (action.type) {\n        case \"DELETE_TRANSACTION\":\n            transactions = state.filter((t) => t.id !== action.payload)\n    \n            // Storing the data in the local Storage of the browser\n            localStorage.setItem(\"transactions\", JSON.stringify(transactions));\n\n            return transactions;\n        case \"ADD_TRANSACTION\":\n            transactions = [action.payload, ...state];\n\n            // Storing the data in the local Storage of the browser\n            localStorage.setItem(\"transactions\", JSON.stringify(transactions));\n            \n            return transactions;\n        default:\n            return state;\n    }\n}\n\nexport default contextReducer;","import React, {useReducer, createContext} from \"react\";\n\nimport contextReducer from \"./contextReducer\";\n\nconst initialState = JSON.parse(localStorage.getItem(\"transactions\")) || [];\n\nexport const ExpenseTrackerContext = createContext(initialState);\n\nexport const Provider = ({children}) => {\n//  An alternative to useState.\n//  useReducer is usually preferable to useState when you have\n//  complex state logic that involves multiple sub-values. \n    const [transactions, dispatch] = useReducer(contextReducer, initialState);\n\n    // Action Creators\n    const deleteTransaction = (id) => {\n        dispatch({type: \"DELETE_TRANSACTION\", payload: id});\n    }\n\n    const addTransaction = (transaction) => {\n        dispatch({type: \"ADD_TRANSACTION\", payload: transaction});\n    } \n    \n    const balance = transactions.reduce((acc, currVal) => {\n        return (currVal.type === \"Expense\" ? acc-currVal.amount : acc+currVal.amount);\n    }, 0);\n\n    return (\n        <ExpenseTrackerContext.Provider value = {{deleteTransaction, addTransaction, transactions, balance}}>\n            {children}\n        </ExpenseTrackerContext.Provider>\n    )\n}","const incomeColors = ['#123123', '#154731', '#165f40', '#16784f', '#14915f', '#10ac6e', '#0bc77e', '#04e38d', '#00ff9d'];\nconst expenseColors = ['#b50d12', '#bf2f1f', '#c9452c', '#d3583a', '#dc6a48', '#e57c58', '#ee8d68', '#f79d79', '#ffae8a', '#cc474b', '#f55b5f'];\n\nexport const incomeCategories = [\n  { type: 'Business', amount: 0, color: incomeColors[0] },\n  { type: 'Investments', amount: 0, color: incomeColors[1] },\n  { type: 'Extra income', amount: 0, color: incomeColors[2] },\n  { type: 'Deposits', amount: 0, color: incomeColors[3] },\n  { type: 'Lottery', amount: 0, color: incomeColors[4] },\n  { type: 'Gifts', amount: 0, color: incomeColors[5] },\n  { type: 'Salary', amount: 0, color: incomeColors[6] },\n  { type: 'Savings', amount: 0, color: incomeColors[7] },\n  { type: 'Rental income', amount: 0, color: incomeColors[8] },\n];\n\nexport const expenseCategories = [\n  { type: 'Bills', amount: 0, color: expenseColors[0] },\n  { type: 'Car', amount: 0, color: expenseColors[1] },\n  { type: 'Clothes', amount: 0, color: expenseColors[2] },\n  { type: 'Travel', amount: 0, color: expenseColors[3] },\n  { type: 'Food', amount: 0, color: expenseColors[4] },\n  { type: 'Shopping', amount: 0, color: expenseColors[5] },\n  { type: 'House', amount: 0, color: expenseColors[6] },\n  { type: 'Entertainment', amount: 0, color: expenseColors[7] },\n  { type: 'Phone', amount: 0, color: expenseColors[8] },\n  { type: 'Pets', amount: 0, color: expenseColors[9] },\n  { type: 'Other', amount: 0, color: expenseColors[10] },\n];\n\nexport const resetCategories = () => {\n  incomeCategories.forEach((c) => c.amount = 0);\n  expenseCategories.forEach((c) => c.amount = 0);\n};\n","import { ExpenseTrackerContext } from \"./context/context\";\n\nimport { incomeCategories, expenseCategories, resetCategories } from \"./constants/categories\";\nimport { useContext } from \"react\";\n\nconst useTransactions = (title) => {\n    resetCategories();\n    const { transactions } = useContext(ExpenseTrackerContext);\n    const transactionsPerType = transactions.filter((t) => t.type === title);\n    const total = transactionsPerType.reduce((acc, currVal) => acc += currVal.amount, 0);\n    const categories = title === \"Income\" ? incomeCategories : expenseCategories;\n\n    transactionsPerType.forEach((t) => {\n        const category = categories.find((c) => c.type === t.category);\n\n        if(category) {\n            category.amount += t.amount;\n        }\n    });\n\n    const filteredCategories = categories.filter((c) => c.amount > 0);\n\n    const chartData = {\n        datasets: [{\n            data: filteredCategories.map((c) => c.amount),\n            backgroundColor: filteredCategories.map((c) => c.color)\n        }],\n        labels: filteredCategories.map((c) => c.type)\n    }\n\n    return {total, chartData};\n}\n\nexport default useTransactions;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  income: {\n    borderBottom: '10px solid rgba(0, 255, 0, 0.5)',\n  },\n  expense: {\n    borderBottom: '10px solid rgba(255, 0, 0, 0.5)',\n  },\n}));\n","import React from \"react\";\nimport { Card, CardHeader, CardContent, Typography } from \"@material-ui/core\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport useTransactions from \"../../useTransactions\";\n\nimport useStyles from \"./styles\";\n\nconst Details = ({ title }) => {\n  const classes = useStyles();\n  const { total, chartData } = useTransactions(title);\n  return (\n    <Card className={title === \"Income\" ? classes.income : classes.expense}>\n      <CardHeader title={title} />\n      <CardContent>\n        <Typography variant=\"h5\">₹{total}</Typography>\n        <Doughnut data={chartData} />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Details;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  cartContent: {\n    paddingTop: 0,\n  },\n  divider: {\n    margin: '20px 0',\n  },\n}));\n","// As month index starts from 0, we are adding 1 to it.\nconst formatDate = (date) =>  {\n    const d = new Date(date);\n    let month = `${d.getMonth() + 1}`;\n    let day = `${d.getDate()}`;\n    const year = d.getFullYear();\n\n    // Month can be 1-9 (Jan-Sept)\n    // We want to show 1 as 01\n    // 2 as 02, 4 as 04 ...\n    if(month.length < 2) {\n        month = `0${month}`;\n    }\n\n    // Day can be 1-7 (Sun-Sat)\n    // We want to show 1 as 01\n    // 2 as 02, 4 as 04 ...\n    if(day.length < 2) {\n        day = `0${day}`;\n    }\n\n    return [year, month, day].join('-');\n}\n\nexport default formatDate;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  radioGroup: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginBottom: '-10px',\n  },\n  button: {\n    marginTop: '20px',\n  },\n}));\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nimport useStyles from \"./styles\";\n\nconst CustomizedSnackbar = ({ open, setOpen }) => {\n  const classes = useStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") return;\n\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <MuiAlert\n          onClose={handleClose}\n          severity=\"success\"\n          elevation={6}\n          variant=\"filled\"\n        >\n          Transaction successfully created.\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default CustomizedSnackbar;\n","import {\n  FormControl,\n  Grid,\n  MenuItem,\n  Typography,\n  Select,\n  InputLabel,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { ExpenseTrackerContext } from \"../../../context/context\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport formatDate from \"../../../utils/formatDate\";\nimport useStyles from \"./styles\";\nimport {\n  incomeCategories,\n  expenseCategories,\n} from \"../../../constants/categories\";\nimport { useSpeechContext } from \"@speechly/react-client\";\nimport CustomizedSnackbar from \"../../Snackbar/Snackbar\";\n\nconst initialState = {\n  amount: \"\",\n  category: \"\",\n  type: \"Income\",\n  date: formatDate(new Date()),\n};\n\nconst Form = () => {\n  const classes = useStyles();\n  const [formData, setFormData] = useState(initialState);\n  const { addTransaction } = useContext(ExpenseTrackerContext);\n  const { segment } = useSpeechContext();\n  const [open, setOpen] = useState(false);\n\n  const createTransaction = () => {\n    const transaction = {\n      ...formData,\n      amount: Number(formData.amount),\n      id: uuidv4(),\n    };\n    setOpen(true);\n    addTransaction(transaction);\n    setFormData(initialState);\n  };\n\n  useEffect(() => {\n    if (segment) {\n      if (segment.intent.intent === \"add_expense\") {\n        setFormData({ ...formData, type: \"Expense\" });\n      } else if (segment.intent.intent === \"add_income\") {\n        setFormData({ ...formData, type: \"Income\" });\n      } else if (\n        segment.isFinal &&\n        segment.intent.intent === \"create_transaction\"\n      ) {\n        return createTransaction();\n      } else if (\n        segment.isFinal &&\n        segment.intent.intent === \"cancel_transaction\"\n      ) {\n        return setFormData(initialState);\n      }\n\n      segment.entities.forEach((e) => {\n        // Make category first letter capital and rest to lowercase\n        // ex: Input: BUSINESS\n        // Output: Business\n        const category = `${e.value.charAt(0)}${e.value\n          .slice(1)\n          .toLowerCase()}`;\n\n        switch (e.type) {\n          case \"amount\":\n            setFormData({ ...formData, amount: e.value });\n            break;\n          case \"category\":\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\n              setFormData({ ...formData, type: \"Income\", category });\n            } else if (\n              expenseCategories.map((iC) => iC.type).includes(category)\n            ) {\n              setFormData({ ...formData, type: \"Expense\", category });\n            }\n            break;\n          case \"date\":\n            setFormData({ ...formData, date: e.value });\n            break;\n          default:\n            break;\n        }\n      });\n\n      if (\n        segment.isFinal &&\n        formData.amount &&\n        formData.category &&\n        formData.type &&\n        formData.date\n      ) {\n        createTransaction();\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [segment]);\n\n  const selectedCategories =\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\n\n  return (\n    <Grid container spacing={2}>\n      <CustomizedSnackbar open={open} setOpen={setOpen} />\n      <Grid item xs={12}>\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\n          {segment && segment.words.map((w) => w.value).join(\" \")}\n        </Typography>\n      </Grid>\n\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Type</InputLabel>\n          <Select\n            value={formData.type}\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\n          >\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Category</InputLabel>\n          <Select\n            value={formData.category}\n            onChange={(e) =>\n              setFormData({ ...formData, category: e.target.value })\n            }\n          >\n            {selectedCategories.map((c) => (\n              <MenuItem key={c.type} value={c.type}>\n                {c.type}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={6}>\n        <TextField\n          type=\"number\"\n          label=\"Amount\"\n          fullWidth\n          value={formData.amount}\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          type=\"date\"\n          label=\"Date\"\n          fullWidth\n          value={formData.date}\n          onChange={(e) =>\n            setFormData({ ...formData, date: formatDate(e.target.value) })\n          }\n        />\n      </Grid>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n        onClick={createTransaction}\n      >\n        Create\n      </Button>\n    </Grid>\n  );\n};\n\nexport default Form;\n","import { makeStyles } from '@material-ui/core/styles';\nimport { red, green } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n  avatarIncome: {\n    color: '#fff',\n    backgroundColor: green[500],\n  },\n  avatarExpense: {\n    color: theme.palette.getContrastText(red[500]),\n    backgroundColor: red[500],\n  },\n  list: {\n    maxHeight: '150px',\n    overflow: 'auto',\n  },\n}));\n","import React, { useContext } from \"react\";\nimport {\n  Avatar,\n  IconButton,\n  List as MUIList,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  Slide,\n} from \"@material-ui/core\";\n\nimport useStyles from \"./styles\";\nimport { Delete, MoneyOff } from \"@material-ui/icons\";\nimport { ExpenseTrackerContext } from \"../../../context/context\";\n\nconst List = () => {\n  const classes = useStyles();\n  const { deleteTransaction, transactions } = useContext(ExpenseTrackerContext);\n\n  return (\n    <MUIList dense={false} className={classes.list}>\n      {transactions.map((transaction) => (\n        <Slide\n          direction=\"down\"\n          in\n          mountOnEnter\n          unmountOnExit\n          key={transaction.id}\n        >\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar\n                className={\n                  transaction.type === \"Income\"\n                    ? classes.avatarIncome\n                    : classes.avatarExpense\n                }\n              >\n                <MoneyOff />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={transaction.category}\n              secondary={`$${transaction.amount} - ${transaction.date}`}\n            />\n            <ListItemSecondaryAction>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"delete\"\n                onClick={() => deleteTransaction(transaction.id)}\n              >\n                <Delete />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </Slide>\n      ))}\n    </MUIList>\n  );\n};\n\nexport default List;\n","import React from \"react\";\n\n// isIncome will be 0 or 1\n// 0 and 1 have the same probability\nconst isIncome = Math.round(Math.random());\n\nconst InfoCard = () => {\n  return (\n    <div style={{ textAlign: \"center\", padding: \"0 10%\" }}>\n      Try saying:\n      <br />\n      Add {isIncome ? \"Income \" : \"Expense \"}\n      for {isIncome ? \"$100 \" : \"$50 \"}\n      in Category {isIncome ? \"Business \" : \"House \"}\n      for {isIncome ? \"Monday \" : \"Tuesday \"}\n    </div>\n  );\n};\n\nexport default InfoCard;\n","import React, { useContext } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\n\nimport useStyles from \"./styles\";\nimport Form from \"./Form/Form\";\nimport List from \"./List/List\";\nimport { ExpenseTrackerContext } from \"../../context/context\";\nimport InfoCard from \"../InfoCard\";\n\nconst Main = () => {\n  const classes = useStyles();\n  const { balance } = useContext(ExpenseTrackerContext);\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        title=\"Expense Tracker\"\n        subheader=\"Made with 💙 by Nikhil Maske\"\n      />\n      <CardContent>\n        <Typography align=\"center\" variant=\"h5\">\n          Total Balance ₹{balance}\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          style={{ lineHeight: \"1.5em\", marginTop: \"20px\" }}\n        >\n          <InfoCard />\n        </Typography>\n        <Divider className={classes.divider} />\n        <Form />\n      </CardContent>\n      <CardContent className={classes.cartContent}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <List />\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Main;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  desktop: {\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  mobile: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n  },\n  main: {\n    [theme.breakpoints.up('sm')]: {\n      paddingBottom: '5%',\n    },\n  },\n  last: {\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: theme.spacing(3),\n      paddingBottom: '200px',\n    },\n  },\n  grid: {\n    '& > *': {\n      margin: theme.spacing(2),\n    },\n  },\n}));\n","import React, {useEffect, useRef } from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport { ErrorPanel, PushToTalkButton, PushToTalkButtonContainer } from '@speechly/react-ui';\n\nimport Details from './components/Details/Details';\nimport Main from \"./components/Main/Main\";\n\nimport useStyles from \"./styles\";\nimport { SpeechState, useSpeechContext } from '@speechly/react-client';\n\nconst App = () => {\n    const classes = useStyles();\n    const {speechState} = useSpeechContext();\n    const main = useRef(null);\n\n    const executeScroll = () => main.current.scrollIntoView();\n\n    useEffect(() => {\n        if(speechState === SpeechState.Recording) {\n            executeScroll();\n        }\n    }, [speechState])\n    return (\n        <div>\n            <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justify=\"center\" style={{height: \"100vh\"}}>\n                <Grid item xs={12} sm={4} className = {classes.mobile}>\n                 <Details title = \"Income\"/>   \n                </Grid>\n                <Grid ref = {main} item xs={12} sm={3} className = {classes.main}>\n                 <Main/>\n                </Grid>\n                <Grid item xs={12} sm={4} className = {classes.desktop}>\n                 <Details title = \"Income\"/>   \n                </Grid>\n                <Grid item xs={12} sm={4} className={classes.last}>\n                 <Details title =\"Expense\"/>   \n                </Grid>\n            </Grid>\n            <PushToTalkButtonContainer>\n                <PushToTalkButton/>\n                <ErrorPanel/>\n            </PushToTalkButtonContainer>\n        </div>\n    )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { SpeechProvider } from \"@speechly/react-client\";\n\nimport App from \"./App\";\nimport \"./index.css\";\nimport {Provider} from \"./context/context\";\n\nReactDOM.render(\n    <SpeechProvider appId=\"23b66b83-e3b3-4839-a417-959e6932a0c1\" language=\"en-US\">\n        <Provider>\n            <App/>\n        </Provider>\n    </SpeechProvider>, \n    document.getElementById(\"root\"));"],"sourceRoot":""}